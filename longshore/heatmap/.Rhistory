xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#add points for species scores
points(sc_sp,
pch = 22, # set shape (here, square with a fill colour)
bg = "steelblue",
col = "steelblue",
cex = 1)
#add text labels for species abbreviations
text(sc_sp + c(0.03, 0.09), # adjust text coordinates to avoid overlap with points
labels = rownames(sc_sp),
x = sc_sp[,1] -0.7, #adjust text coordinate to avoid overlap with arrow tip
y = sc_sp[,2] +0.085,
col = "grey40",
font = 3, # bold
cex = 0.6)
#add arrows for effects of the expanatory variables
arrows(0,0, # start them from (0,0)
sc_bp[,1], sc_bp[,2], # end them at the score value
col = "red",
lwd = 1)
#add text labels for arrows
text(x = sc_bp[,1] +0.3, #adjust text coordinate to avoid overlap with arrow tip
y = sc_bp[,2] +0.00,
labels = c("season","year"),
col = "red",
cex = 1,
font = 2)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
fig <- plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
fig
fig
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,5),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,5),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-1,1),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-4,4),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#add points for site scores
points(sc_si,
pch = 21, # set shape (here, circle with a fill colour)
col = "gold", # outline colour
bg = "gold", # fill colour
cex = 1
) # size
#add points for species scores
points(sc_sp,
pch = 22, # set shape (here, square with a fill colour)
bg = "steelblue",
col = "steelblue",
cex = 1)
#add text labels for species abbreviations
text(sc_sp + c(0.03, 0.09), # adjust text coordinates to avoid overlap with points
labels = rownames(sc_sp),
x = sc_sp[,1] -0.7, #adjust text coordinate to avoid overlap with arrow tip
y = sc_sp[,2] +0.085,
col = "grey40",
font = 3, # bold
cex = 0.6)
#add arrows for effects of the expanatory variables
arrows(0,0, # start them from (0,0)
sc_bp[,1], sc_bp[,2], # end them at the score value
col = "red",
lwd = 1)
#add text labels for arrows
text(x = sc_bp[,1] +0.3, #adjust text coordinate to avoid overlap with arrow tip
y = sc_bp[,2] +0.00,
labels = c("season","year"),
col = "red",
cex = 1,
font = 2)
#set up a blank plot with scaling, axes, and labels
plot(m2,
scaling = 1, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-0.5,0.5),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#add points for site scores
points(sc_si,
pch = 21, # set shape (here, circle with a fill colour)
col = "gold", # outline colour
bg = "gold", # fill colour
cex = 1
) # size
#add points for species scores
points(sc_sp,
pch = 22, # set shape (here, square with a fill colour)
bg = "steelblue",
col = "steelblue",
cex = 1)
#add text labels for species abbreviations
text(sc_sp + c(0.03, 0.09), # adjust text coordinates to avoid overlap with points
labels = rownames(sc_sp),
x = sc_sp[,1] -0.7, #adjust text coordinate to avoid overlap with arrow tip
y = sc_sp[,2] +0.085,
col = "grey40",
font = 3, # bold
cex = 0.6)
#add arrows for effects of the expanatory variables
arrows(0,0, # start them from (0,0)
sc_bp[,1], sc_bp[,2], # end them at the score value
col = "red",
lwd = 1)
#add text labels for arrows
text(x = sc_bp[,1] +0.3, #adjust text coordinate to avoid overlap with arrow tip
y = sc_bp[,2] +0.00,
labels = c("season","year"),
col = "red",
cex = 1,
font = 2)
plot(m2,
scaling = 2, # set scaling type
type = "none", # this excludes the plotting of any points from the results
frame = FALSE,
# set axis limits
xlim = c(-0.5,0.5),
ylim = c(-1,1),
# label the plot (title, and axes)
main = "Triplot RDA - scaling 1",
xlab = paste0("RDA1 (", perc[1], "%)"),
ylab = paste0("RDA2 (", perc[2], "%)")
)
#add points for site scores
points(sc_si,
pch = 21, # set shape (here, circle with a fill colour)
col = "gold", # outline colour
bg = "gold", # fill colour
cex = 1
) # size
#add points for species scores
points(sc_sp,
pch = 22, # set shape (here, square with a fill colour)
bg = "steelblue",
col = "steelblue",
cex = 1)
#add text labels for species abbreviations
text(sc_sp + c(0.03, 0.09), # adjust text coordinates to avoid overlap with points
labels = rownames(sc_sp),
x = sc_sp[,1] -0.7, #adjust text coordinate to avoid overlap with arrow tip
y = sc_sp[,2] +0.085,
col = "grey40",
font = 3, # bold
cex = 0.6)
#add arrows for effects of the expanatory variables
arrows(0,0, # start them from (0,0)
sc_bp[,1], sc_bp[,2], # end them at the score value
col = "red",
lwd = 1)
#add text labels for arrows
text(x = sc_bp[,1] +0.3, #adjust text coordinate to avoid overlap with arrow tip
y = sc_bp[,2] +0.00,
labels = c("season","year"),
col = "red",
cex = 1,
font = 2)
library(phyloseq)
### Load directory
setwd("~/Desktop/Undergraduate/manuscript/Data_2023/longshore/phyloseq")
setwd("~/Desktop/Undergraduate/manuscript/hons_manuscript_2023/longshore/phyloseq")
otumat <- read.csv("otumat/04_long_reads_percentThresh_phyloseq.csv")
taxmat <- read.csv("taxonomy/03_long_subsetTaxa_phyloseq.csv")
sampledata <- read.csv("01_long_sampledata_phyloseq.csv")
### Convert OTU column to row names
otumat1 <- otumat[,-1]
rownames(otumat1) <- otumat[,1]
taxmat1 <- taxmat[,-1]
rownames(taxmat1) <- taxmat[,1]
taxmat2 <- as.matrix(taxmat1)
sampledata1 <- sampledata[,-1]
rownames(sampledata1) <- sampledata[,1]
sampledata2 <- sample_data(sampledata1)
### Create physeq object
OTU <- otu_table(otumat1, taxa_are_rows = TRUE)
TAX <- tax_table(taxmat2)
physeq = phyloseq(OTU, TAX, sampledata2)
### Stacked barplot
library(ggplot2)
### Remove the positive controls
subset = subset_samples(physeq, tow != c("EC", "MC", "OC"))
otumat <- read.csv("otumat/06b_long_counts_sampleMerge_phyloseq.csv")
taxmat <- read.csv("taxonomy/03_long_subsetTaxa_phyloseq.csv")
sampledata <- read.csv("02_long_sampledata_phyloseq.csv")
## Convert OTU column to row names
otumat1 <- otumat[,-1]
rownames(otumat1) <- otumat[,1]
taxmat1 <- taxmat[,-1]
rownames(taxmat1) <- taxmat[,1]
taxmat2 <- as.matrix(taxmat1)
sampledata1 <- sampledata[,-1]
rownames(sampledata1) <- sampledata[,1]
sampledata2 <- sample_data(sampledata1)
### Create physeq object
OTU <- otu_table(otumat1, taxa_are_rows = TRUE)
TAX <- tax_table(taxmat2)
physeq = phyloseq(OTU, TAX, sampledata2)
### Load ggplot2
library(ggplot2)
### Subset data to show Echinodermata only
(echino <- subset_taxa(physeq, phylum == "Echinodermata"))
### Create blues palette
my_blu = brewer.pal(9,"Blues")[3:8]
### Stacked barplot
fig2 <- plot_bar(echino, x = "site", fill = "class") +
geom_bar(aes(color = class, fill = class), stat="identity", position="stack") +
labs(x = "Site", y = "Counts", color = "Taxa", fill = "Taxa") +
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 4, 1), limits = c(0, 4)) +
theme_classic() +
scale_fill_manual(values=my_blu) +
scale_color_manual(values=my_blu) +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12, colour = "black", angle=50, vjust=1, hjust=1),
axis.text.y = element_text(size = 12, colour = "black"),
axis.title = element_text(size = 16))
### Create blues palette
my_blu = brewer.pal(9,"Blues")[3:8]
### Create blues palette
library(RColorBrewer)
my_blu = brewer.pal(9,"Blues")[3:8]
### Stacked barplot
fig2 <- plot_bar(echino, x = "site", fill = "class") +
geom_bar(aes(color = class, fill = class), stat="identity", position="stack") +
labs(x = "Site", y = "Counts", color = "Taxa", fill = "Taxa") +
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 4, 1), limits = c(0, 4)) +
theme_classic() +
scale_fill_manual(values=my_blu) +
scale_color_manual(values=my_blu) +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12, colour = "black", angle=50, vjust=1, hjust=1),
axis.text.y = element_text(size = 12, colour = "black"),
axis.title = element_text(size = 16))
fig2
### Stacked barplot
fig2 <- plot_bar(echino, x = "site", fill = "class", facet_grid = "year") +
geom_bar(aes(color = class, fill = class), stat="identity", position="stack") +
labs(x = "Site", y = "Counts", color = "Taxa", fill = "Taxa") +
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 4, 1), limits = c(0, 4)) +
theme_classic() +
scale_fill_manual(values=my_blu) +
scale_color_manual(values=my_blu) +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12, colour = "black", angle=50, vjust=1, hjust=1),
axis.text.y = element_text(size = 12, colour = "black"),
axis.title = element_text(size = 16))
fig2
fig2$data$site <- factor(fig2$data$site, levels = c("Fore & Aft Reef", "Bramble Reef","Brittomart Reef",
"Otter Reef","Yamacutta Reef","Eddy Reef","Hall-Thompson Reef",
"Gibson Reef","Sudbury Reef","Green Island","Pixie Reef",
"Tongue Reef","Undine Reef","Osterlund Reef",
"Lizard Island"))
fig2$data$class <- factor(fig2$data$class, levels = c("Asteroidea","Crinoidea","Echinoidea","Holothuroidea","Ophiuroidea","Echinodermata"))
fig2
### Stacked barplot
fig2 <- plot_bar(echino, x = "site", fill = "class", facet_grid = "year") +
geom_bar(aes(color = class, fill = class), stat="identity", position="stack") +
labs(x = "Site", y = "Counts", color = "Taxa", fill = "Taxa") +
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 5, 1), limits = c(0, 5)) +
theme_classic() +
scale_fill_manual(values=my_blu) +
scale_color_manual(values=my_blu) +
theme(legend.title = element_text(size = 16),
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12, colour = "black", angle=50, vjust=1, hjust=1),
axis.text.y = element_text(size = 12, colour = "black"),
axis.title = element_text(size = 16))
fig2$data$site <- factor(fig2$data$site, levels = c("Fore & Aft Reef", "Bramble Reef","Brittomart Reef",
"Otter Reef","Yamacutta Reef","Eddy Reef","Hall-Thompson Reef",
"Gibson Reef","Sudbury Reef","Green Island","Pixie Reef",
"Tongue Reef","Undine Reef","Osterlund Reef",
"Lizard Island"))
fig2$data$class <- factor(fig2$data$class, levels = c("Asteroidea","Crinoidea","Echinoidea","Holothuroidea","Ophiuroidea","Echinodermata"))
fig2
setwd("~/Desktop/Undergraduate/manuscript/hons_manuscript_2023/longshore/glmm")
library(reshape)
### Merge taxonomy and otumat
setwd("~/Desktop/Undergraduate/manuscript/Data_2023/longshore")
tax <- read.csv("long_echino_tax.csv")
otu <- read.csv("06b_long_counts_sampleMerge_phyloseq.csv")
otutax <- merge(tax, otu, by.x = "otuID", by.y = "otuID")
### Load species data
df <- read.csv("long_counts_echinoSp_otutax.csv")
setwd("~/Desktop/Undergraduate/manuscript/hons_manuscript_2023/longshore/heatmap")
### Load genus data
df1 <- read.csv("long_counts_echinoGenus_otutax.csv")
df1 <- as.data.frame(df1)
head(df1)
df1 <- ddply(df1, "genus", numcolwise(sum))
head(df1)
### Format data frame for plot
df1_melt <- melt(df1)
head(df1_melt)
df1_melt$variable <- factor(df1_melt$variable,
level = c("Fore_2017", "Bram_2017","Brit_2017",
"Otte_2017","Yama_2017","Eddy_2017","Hall_2017",
"Gibs_2017","Sudb_2017","Gree_2017","Pixi_2017",
"Tong_2017","Undi_2017","Oste_2017",
"Liza_2017",
"Fore_2018", "Bram_2018","Brit_2018",
"Otte_2018","Yama_2018","Eddy_2018","Hall_2018",
"Gibs_2018","Sudb_2018","Gree_2018","Pixi_2018",
"Tong_2018","Undi_2018","Oste_2018",
"Liza_2018",
"Fore_2019", "Bram_2019","Brit_2019",
"Otte_2019","Yama_2019","Eddy_2019","Hall_2019",
"Gibs_2019","Sudb_2019","Gree_2019","Pixi_2019",
"Tong_2019","Undi_2019","Oste_2019",
"Liza_2019"))
fig2 <- ggplot(df1_melt, aes(variable, genus, fill=value)) +
geom_tile(color="grey") +
labs(x="Site", y="Genera", fill="# OTUs") +
scale_fill_gradient(low="white", high="blue") +
theme(axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12)) +
theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1))
fig2
fig2 <- ggplot(df1_melt, aes(variable, genus, fill=value)) +
geom_tile(color="grey") +
labs(x="Site", y="Genera", fill="# OTUs") +
scale_fill_gradient(low="white", high="blue", breaks=c(0,1,2)) +
theme(axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12)) +
theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1))
fig2
fig2 <- ggplot(df1_melt, aes(variable, genus, fill=value)) +
geom_tile(color="grey") +
labs(x="Site", y="Genera", fill="# OTUs") +
scale_fill_gradient(low="white", high="blue", breaks=c(0,1)) +
theme(axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12)) +
theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1))
fig2
fig2 <- ggplot(df1_melt, aes(variable, genus, fill=value)) +
geom_tile(color="grey") +
labs(x="Site", y="Genera", fill="# OTUs") +
scale_fill_gradient(low="white", high="blue", breaks=c(0,1)) +
theme(axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12)) +
theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1)) =
theme(axis.title = element_text(colour="black", size=12))
fig2
fig2 <- ggplot(df1_melt, aes(variable, genus, fill=value)) +
geom_tile(color="grey") +
labs(x="Site", y="Genera", fill="# OTUs") +
scale_fill_gradient(low="white", high="blue", breaks=c(0,1)) +
theme(axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12)) +
theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1)) +
theme(axis.title = element_text(colour="black", size=12))
fig2
fig2 <- ggplot(df1_melt, aes(variable, genus, fill=value)) +
geom_tile(color="grey") +
labs(x="Site", y="Genera", fill="# OTUs") +
scale_fill_gradient(low="white", high="blue", breaks=c(0,1)) +
theme(axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12)) +
theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1)) +
theme(axis.title = element_text(colour="black", size=16))
fig2
fig2 <- ggplot(df1_melt, aes(variable, genus, fill=value)) +
geom_tile(color="grey") +
labs(x="Site", y="Genera", fill="# OTUs") +
scale_fill_gradient(low="white", high="blue", breaks=c(0,1), limits=c(0,2)) +
theme(axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12)) +
theme(axis.text.x = element_text(angle = 50, vjust = 1, hjust = 1)) +
theme(axis.title = element_text(colour="black", size=16))
fig2
